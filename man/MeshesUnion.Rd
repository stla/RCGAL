% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meshes.R
\name{MeshesUnion}
\alias{MeshesUnion}
\title{Meshes union}
\usage{
MeshesUnion(meshes, merge = FALSE, normals = FALSE, exact = FALSE)
}
\arguments{
\item{meshes}{a list of \emph{triangular} meshes, each given as a list with
(at least) two fields: \code{vertices} and \code{faces}}

\item{merge}{Boolean, whether to merge the duplicated vertices of the
input meshes and the output mesh}

\item{normals}{Boolean, whether to return the per-vertex normals of the
output mesh}

\item{exact}{Boolean, whether to use exact calculations; this is slower but
more accurate}
}
\value{
A triangular mesh given as a list with fields \code{vertices},
  \code{faces}, \code{edges}, \code{exteriorEdges} and \code{normals}
  if \code{normals=TRUE}.
}
\description{
Computes the union of the given meshes.
}
\examples{
library(RCGAL)
library(rgl)

# mesh one: a cube; one has to triangulate it
cube1 <- cube3d() # (from the rgl package)
vertices <- t(cube1$vb[-4L, ])
faces <- t(cube1$ib)
mesh1 <- Mesh(vertices, faces, triangulate = TRUE, normals = FALSE)

# mesh two: another cube; one also has to triangulate it
cube2 <- translate3d( # (from the rgl package)
  cube3d(), 1, 1, 0
)
vertices <- t(cube2$vb[-4L, ])
faces <- t(cube2$ib)
mesh2 <- Mesh(vertices, faces, triangulate = TRUE, normals = FALSE)

# compute the union
umesh <- MeshesUnion(mesh1, mesh2)

# plot
rglumesh <- tmesh3d(
  vertices = t(umesh[["vertices"]]),
  indices = t(umesh[["faces"]]),
  homogeneous = FALSE
)
open3d(windowRect = c(50, 50, 562, 562))
shade3d(cube1, color = "yellow", alpha = 0.2)
shade3d(cube2, color = "cyan", alpha = 0.2)
shade3d(rglumesh, color = "red")
plotEdges(
  vertices = umesh[["vertices"]], edges = umesh[["exteriorEdges"]],
  edgesAsTubes = TRUE, verticesAsSpheres = TRUE
)
}
